# Install required plugins
required_plugins = ["vagrant-hostsupdater"]
required_plugins.each do |plugin|
    exec "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

Vagrant.configure("2") do |config|
  config.vm.define "master" do |master|
    master.vm.box = "ubuntu/bionic64"
    master.vm.network "private_network", ip: "192.168.10.170"
    master.vm.synced_folder "ansible", "/home/vagrant/ansible"
    master.vm.provision "ansible_local" do |ansible|
      ansible.playbook = "master.yml"
    end
  end
  config.vm.define "slave" do |slave|
    slave.vm.box = "ubuntu/bionic64"
    slave.vm.network "private_network", ip: "192.168.10.180"
    slave.hostsupdater.aliases = ["development.local"]
    slave.vm.synced_folder "db", "/home/vagrant/db"
    slave.vm.synced_folder "app", "/home/ubuntu/app"
  end
  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end
end

# config.vm.define "app" do |app|
#   app.vm.box = "ubuntu/bionic64"
#   app.vm.network "private_network", ip: "192.168.10.100"
#   app.hostsupdater.aliases = ["development.local"]
#   app.vm.synced_folder "app", "/home/ubuntu/app"
#   app.vm.provision "shell", path: "environment/app/provision.sh", privileged: false
# end
# config.vm.define "db" do |db|
#    db.vm.box = "ubuntu/bionic64"
#    db.vm.network "private_network", ip: "192.168.10.150"
#    db.hostsupdater.aliases = ["database.local"]
#    db.vm.synced_folder "environment/db", "/home/ubuntu/environment"
#    db.vm.provision "shell", path: "environment/db/provision.sh", privileged: false
#  end
